local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local whitelist = {
    ["0yekf"] = true,
    ["im_sad12211"] = true,
    ["EfdoRB"] = true,
   ["TovKaiz"] = true,
 ["iN0TFRLZ"] = true,
}

local function checkWhitelist(player)
    if not whitelist[player.Name] then
        player:Kick("Not Whitelisted")
    end
end

for _, player in pairs(Players:GetPlayers()) do
    checkWhitelist(player)
end

Players.PlayerAdded:Connect(function(player)
    checkWhitelist(player)
end)

game.Workspace.FallenPartsDestroyHeight = 0/0


local pullRadius = 50
local orbitDistance = 3
local orbitHeight = 2
local orbitSpeed = 2
local isPullActive = false
local isArcMode = false
local pulledAnvils = {} 
local akillTargets = {} 
local akillLoopConnection
local currentTargetIndex = 1 
local orbitConnections = {}
local standardVelocity = -9e37 
local whitelist = {} 
local trackedPlayerIDs = {} 


local function setupAnvil(anvil)
    anvil.Anchored = false
    anvil.CanCollide = false
    anvil.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
end


local function startOrbit(anvil)
    setupAnvil(anvil)
    pulledAnvils[anvil] = true 
    local angle = 0

    local anvilConnection = RunService.Heartbeat:Connect(function()
        if pulledAnvils[anvil] then
            angle = angle + orbitSpeed
            local rootPartPosition = Players.LocalPlayer.Character.HumanoidRootPart.Position
            anvil.Position = rootPartPosition + Vector3.new(
                math.cos(math.rad(angle)) * orbitDistance,
                orbitHeight,
                math.sin(math.rad(angle)) * orbitDistance
            )
            anvil.CFrame = CFrame.new(anvil.Position, rootPartPosition)

            
            anvil.Velocity = (anvil.Position - rootPartPosition).unit * standardVelocity
        else
            anvilConnection:Disconnect()
        end
    end)

    table.insert(orbitConnections, anvilConnection)
end


local function pullAnvilsInRadius()
    if Players.LocalPlayer.Character then
        local rootPart = Players.LocalPlayer.Character.HumanoidRootPart
        for _, anvil in pairs(workspace:GetChildren()) do
            if anvil:IsA("MeshPart") and anvil.Name == "Anvil" and (anvil.Position - rootPart.Position).magnitude <= pullRadius then
                if not pulledAnvils[anvil] then
                    startOrbit(anvil) 
                end
            end
        end
    end
end


local function stopTargetingLoops()
    if akillLoopConnection then
        akillLoopConnection:Disconnect()
        akillLoopConnection = nil
    end
    akillTargets = {} 
    currentTargetIndex = 1 
end


local function handleAkill()
    if #akillTargets > 0 then
        local targetPlayer = akillTargets[currentTargetIndex]
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position

            
            for anvil in pairs(pulledAnvils) do
                if anvil:IsA("MeshPart") and anvil.Name == "Anvil" and not whitelist[targetPlayer.Name] then
                    anvil.Position = targetPosition 
                end
            end

    
            akillLoopConnection = RunService.Heartbeat:Connect(function()
                if #akillTargets > 0 then
                    local currentTarget = akillTargets[currentTargetIndex]
                    if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
                        local currentTargetPosition = currentTarget.Character.HumanoidRootPart.Position
                        for anvil in pairs(pulledAnvils) do 
                            if anvil:IsA("MeshPart") and anvil.Name == "Anvil" and not whitelist[currentTarget.Name] then
                                anvil.Position = currentTargetPosition
                            end
                        end
                    end
                    currentTargetIndex = currentTargetIndex % #akillTargets + 1 
                end
                wait(0.15)
            end)
        end
    end
end


local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        wait(1) 

        
        if trackedPlayerIDs[player.UserId] then
            akillTargets[#akillTargets + 1] = player 
            print(player.Name .. " has rejoined and has been targeted again.")
            handleAkill() 
        end
    end)
end


local function onChatMessage(message)
    local args = string.split(message, " ")
    local command = args[1]

    if command == "+start" then
        isPullActive = true
        print("Pull activated. Equip the Anvil tool to start pulling anvils.")
    elseif command == "+stop" then
        isPullActive = false
        stopTargetingLoops() 
        print("All actions deactivated. Anvils will no longer pull or orbit.")
    elseif command == "+arc" then
        isArcMode = true
        stopTargetingLoops() 
        print("Arc mode activated. All targeting and pulling actions stopped.")
    elseif command == "-arc" then
        isArcMode = false
        isPullActive = true
        print("Arc mode deactivated. You can now pull anvils again.")
    elseif command == "+rc" then
        stopTargetingLoops() 
        isPullActive = true 
        resetAnvilOrbits() 
        local closestPlayer = nil
        local closestDistance = math.huge

        
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (Players.LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
                if (player.DisplayName:lower():find(args[2]:lower()) or player.Name:lower():find(args[2]:lower())) and distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end

        if closestPlayer then
            whitelist[closestPlayer.Name] = true 
            print(closestPlayer.Name .. " has been added to the whitelist. They will not receive anvils.")
        else
            print("No matching player found to whitelist.")
        end

        print("Reset command executed. All orbits destroyed.")
    elseif command == "+aka" then
        akillLoopConnection = RunService.Heartbeat:Connect(function()
            for anvil in pairs(pulledAnvils) do 
                if anvil:IsA("MeshPart") and anvil.Name == "Anvil" then
                    setupAnvil(anvil)
                    local targetPlayer = Players:GetPlayers()[math.random(1, #Players:GetPlayers())] 
                    if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and not whitelist[targetPlayer.Name] then
                        anvil.Position = targetPlayer.Character.HumanoidRootPart.Position
                    end
                end
            end
            wait(0.15)
        end)
        print("+aka command activated. Anvils will now orbit random players.")
    elseif command == "+akill" and args[2] then
        local targetName = args[2]:lower()
        for _, player in pairs(Players:GetPlayers()) do
            if (player.Name:lower():find(targetName) or player.DisplayName:lower():find(targetName)) 
               and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and not whitelist[player.Name] then
                table.insert(akillTargets, player)
                trackedPlayerIDs[player.UserId] = true 
            end
        end

        if #akillTargets > 0 then
            print("Targets set:", #akillTargets, "players matched.")
            handleAkill() 
        else
            print("No players matched the target name.")
        end
    elseif command == "+spinspeed" and args[2] then
        local newSpeed = tonumber(args[2])
        if newSpeed then
            orbitSpeed = newSpeed
            print("Orbit speed set to:", orbitSpeed)
        else
            print("Invalid speed value.")
        end
    elseif command == "+spinradius" and args[2] then
        local newRadius = tonumber(args[2])
        if newRadius then
            orbitDistance = newRadius
            print("Orbit radius set to:", orbitDistance)
        else
            print("Invalid radius value.")
        end
    elseif command == "+spinheight" and args[2] then
        local newHeight = tonumber(args[2])
        if newHeight then
            orbitHeight = newHeight
            print("Orbit height set to:", orbitHeight)
        else
            print("Invalid height value.")
        end
    elseif command == "+wl" and args[2] then
        local targetName = args[2]:lower()
        for _, player in pairs(Players:GetPlayers()) do
            if (player.Name:lower():find(targetName) or player.DisplayName:lower():find(targetName)) then
                whitelist[player.Name] = true 
                print(player.Name .. " has been whitelisted.")
                return
            end
        end
        print("No player matched the name for whitelisting.")
    end
end

Players.LocalPlayer.Chatted:Connect(onChatMessage)


local function handleCharacter(character)
    local anvilTool = character:WaitForChild("Anvil", 10) 

    while true do
        if anvilTool then
            isPullActive = true
            while anvilTool.Parent == character do
                pullAnvilsInRadius()
                wait(0.1)
            end
            isPullActive = false
        end
        wait(1) 
    end
end


Players.LocalPlayer.CharacterAdded:Connect(function(character)
    wait(1) 
    handleCharacter(character)
end)


Players.PlayerAdded:Connect(onPlayerAdded)


if Players.LocalPlayer.Character then
    handleCharacter(Players.LocalPlayer.Character)
end
